apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'

android {
    buildToolsVersion "30.0.0"

    flavorDimensions 'sdkVersion', 'legacyStorageFlag'
    productFlavors {
        android10 {
            dimension 'sdkVersion'
            compileSdkVersion 29
            targetSdkVersion 29

            applicationIdSuffix ".ten"
        }

        android11 {
            dimension 'sdkVersion'
            compileSdkVersion 30
            targetSdkVersion 30

            applicationIdSuffix ".eleven"
        }

        legacyOff {
            dimension 'legacyStorageFlag'
            manifestPlaceholders = [legacyStorageFlag:"false"]

            applicationIdSuffix ".off"
        }

        legacyOn {
            dimension 'legacyStorageFlag'
            manifestPlaceholders = [legacyStorageFlag:"true"]

            applicationIdSuffix ".on"
        }
    }

    defaultConfig {
        applicationId "com.aar.androidstorage"
        minSdkVersion 16
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"

        resValue 'string', 'app_name', 'AndStore'
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
}

dependencies {
    implementation fileTree(dir: "libs", include: ["*.jar"])
    implementation "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version"
    implementation 'androidx.core:core-ktx:1.3.1'
    implementation 'androidx.appcompat:appcompat:1.2.0'
    implementation 'androidx.constraintlayout:constraintlayout:2.0.1'
    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'androidx.test.ext:junit:1.1.2'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.3.0'
}

android.applicationVariants.all { variant ->
    def appName = variant.mergedFlavor.resValues.get('app_name').getValue()
    appName = "${appName}"
    variant.productFlavors.each { flavor ->
        appName += " ${flavor.name}"
    }
    appName += " ${variant.buildType.name}"
    variant.resValue 'string', 'app_name', appName
}